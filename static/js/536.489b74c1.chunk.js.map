{"version":3,"file":"static/js/536.489b74c1.chunk.js","mappings":"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","sources":["sections/cart/cart-info/components/form/form.controller.ts","sections/cart/cart-info/components/form/form.tsx","sections/cart/cart-info/cart-info.tsx","routes/cart.lazy.tsx","shared/components/common/section/section.tsx"],"sourcesContent":["import { FormEventHandler, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { z, ZodError } from \"zod\";\r\nimport { clearCart } from \"../../../../../redux/cart-slice/cart-slice\";\r\nimport { useNavigate } from \"@tanstack/react-router\";\r\n\r\nconst defaultErrorsState = {\r\n  name: \"\",\r\n  phone: \"\",\r\n  surname: \"\",\r\n};\r\n\r\nexport const useFormController = () => {\r\n  const [errors, setErrors] = useState(defaultErrorsState);\r\n  const navigate = useNavigate();\r\n\r\n  const orderSchema = z\r\n    .object({\r\n      name: z.string().min(1, { message: \"Name is required\" }),\r\n      surname: z.string().min(1, { message: \"Surname is required\" }),\r\n      phone: z\r\n        .string()\r\n        .regex(/^\\+?\\d[\\d\\s-]{8,14}$/, { message: \"Invalid phone number\" }),\r\n    })\r\n    .required();\r\n\r\n  type OrderSchema = z.infer<typeof orderSchema>;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const validate = (data: OrderSchema) => {\r\n    try {\r\n      orderSchema.parse(data);\r\n\r\n      return true;\r\n    } catch (e) {\r\n      const err = e as unknown as ZodError;\r\n\r\n      const _errors = {\r\n        name: \"\",\r\n        surname: \"\",\r\n        phone: \"\",\r\n      };\r\n\r\n      err.issues.forEach((error) => {\r\n        const key = error.path[0] as keyof typeof _errors;\r\n        const value = error.message;\r\n\r\n        _errors[key] = value;\r\n      });\r\n\r\n      setErrors(_errors);\r\n\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onSubmit: FormEventHandler<HTMLFormElement> = (e) => {\r\n    e.preventDefault();\r\n\r\n    setErrors(defaultErrorsState);\r\n\r\n    const form = e.target as HTMLFormElement;\r\n\r\n    const nameInput = form.elements.namedItem(\"name\") as HTMLInputElement;\r\n    const surnameInput = form.elements.namedItem(\"surname\") as HTMLInputElement;\r\n    const phoneInput = form.elements.namedItem(\"phone\") as HTMLInputElement;\r\n\r\n    const name = nameInput.value;\r\n    const surname = surnameInput.value;\r\n    const phone = phoneInput.value;\r\n\r\n    const isFormValid = validate({ name, surname, phone });\r\n\r\n    if (!isFormValid) return;\r\n\r\n    const formData = {\r\n      name,\r\n      surname,\r\n      phone,\r\n    };\r\n\r\n    console.log(formData);\r\n\r\n    localStorage.removeItem(\"cart\");\r\n    dispatch(clearCart());\r\n\r\n    navigate({ to: \"/thanks\" });\r\n  };\r\n\r\n  return {\r\n    onSubmit,\r\n    errors,\r\n  };\r\n};\r\n","import { twMerge } from \"tailwind-merge\";\r\nimport { useFormController } from \"./form.controller\";\r\n\r\nexport const Form = () => {\r\n  const { onSubmit, errors } = useFormController();\r\n\r\n  return (\r\n    <div>\r\n      <p\r\n        className={twMerge(\r\n          \"mb-[16px] font-bold\",\r\n          \"text-[2rem] leading-[1.4]\",\r\n          \"tablet:text-[2.2rem]\"\r\n        )}\r\n      >\r\n        Create your order\r\n      </p>\r\n\r\n      <form\r\n        className=\"flex flex-col gap-[16px]\"\r\n        id=\"cart-form\"\r\n        onSubmit={onSubmit}\r\n      >\r\n        <div className=\"flex flex-col gap-[8px]\">\r\n          <label htmlFor=\"name\">Name</label>\r\n\r\n          <input\r\n            placeholder=\"Name\"\r\n            type=\"text\"\r\n            id=\"name\"\r\n            className=\"border-[1px] border-light-01 px-[8px] py-[4px]\"\r\n          />\r\n\r\n          {errors.name && <p>{errors.name}</p>}\r\n        </div>\r\n\r\n        <div className=\"flex flex-col gap-[8px]\">\r\n          <label htmlFor=\"surname\">Surname</label>\r\n\r\n          <input\r\n            placeholder=\"Surname\"\r\n            type=\"text\"\r\n            id=\"surname\"\r\n            className=\"border-[1px] border-light-01 px-[8px] py-[4px]\"\r\n          />\r\n\r\n          {errors.surname && <p>{errors.surname}</p>}\r\n        </div>\r\n\r\n        <div className=\"flex flex-col gap-[8px]\">\r\n          <label htmlFor=\"phone\">Phone</label>\r\n\r\n          <input\r\n            placeholder=\"Phone\"\r\n            type=\"tel\"\r\n            id=\"phone\"\r\n            className=\"border-[1px] border-light-01 px-[8px] py-[4px]\"\r\n          />\r\n\r\n          {errors.phone && <p>{errors.phone}</p>}\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"w-full bg-dark-01 px-[8px] py-[12px] text-white hover:shadow-left-shadow-black-button ease-linear transition-all\"\r\n        >\r\n          Create order\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import { twMerge } from \"tailwind-merge\";\r\nimport { MouseEventHandler } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { Container } from \"../../../shared/components/common/container/container\";\r\nimport { Section } from \"../../../shared/components/common/section/section\";\r\n\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { changeQuantity } from \"../../../redux/cart-slice/cart-slice\";\r\nimport { Form } from \"./components/form/form\";\r\n\r\nexport const CartInfo = () => {\r\n  const cart = useSelector((state: RootState) => state.cart.cart);\r\n  const currency = useSelector((state: RootState) => state.products.currency);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const addOne: MouseEventHandler<HTMLButtonElement> = (e) => {\r\n    const { id } = e.target as HTMLButtonElement;\r\n\r\n    const newQuantityCart = cart.map((item) => {\r\n      if (item._id !== id) return item;\r\n\r\n      return {\r\n        ...item,\r\n        quantity: item.quantity + 1,\r\n      };\r\n    });\r\n\r\n    localStorage.setItem(\"cart\", JSON.stringify(newQuantityCart));\r\n\r\n    dispatch(changeQuantity({ type: \"plus\", id }));\r\n  };\r\n\r\n  const minusOne: MouseEventHandler<HTMLButtonElement> = (e) => {\r\n    const { id } = e.target as HTMLButtonElement;\r\n\r\n    dispatch(changeQuantity({ type: \"minus\", id }));\r\n\r\n    const newQuantityCart = cart\r\n      .map((item) => {\r\n        if (item._id !== id) return item;\r\n\r\n        return {\r\n          ...item,\r\n          quantity: item.quantity - 1,\r\n        };\r\n      })\r\n      .filter((item) => item?.quantity > 0);\r\n\r\n    if (!cart.map((item) => item._id).includes(id)) {\r\n      localStorage.setItem(\r\n        \"cart\",\r\n        JSON.stringify(cart.filter((item) => item._id !== id))\r\n      );\r\n    }\r\n\r\n    localStorage.setItem(\"cart\", JSON.stringify(newQuantityCart));\r\n  };\r\n\r\n  return (\r\n    <Section>\r\n      <Container>\r\n        <h2\r\n          className={twMerge(\r\n            \"mb-[20px] font-bold\",\r\n            \"text-[3.4rem] leading-[1.2]\",\r\n            \"tablet:text-[4.6rem]\"\r\n          )}\r\n        >\r\n          Cart\r\n        </h2>\r\n\r\n        {cart.length > 0 ? (\r\n          <div className=\"flex gap-[28px] flex-col tablet-vertical:flex-row\">\r\n            <div className=\"flex flex-col gap-[20px] grow\">\r\n              <ul className=\"flex flex-col gap-[20px]\">\r\n                {cart.map((item) => (\r\n                  <li\r\n                    key={item._id}\r\n                    className=\"bg-light-04 px-[16px] py-[20px] flex justify-between\"\r\n                  >\r\n                    <div>\r\n                      <h3>{item.title}</h3>\r\n                      <span>\r\n                        {item.price} {item.currency}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"flex gap-[12px] items-center\">\r\n                      <button\r\n                        className=\"w-[48px] h-[48px] text-white font-bold bg-light-01 flex justify-center items-center hover:bg-white hover:text-dark-01 ease-linear transition-all\"\r\n                        onClick={minusOne}\r\n                        id={item._id}\r\n                      >\r\n                        -\r\n                      </button>\r\n\r\n                      <span className=\"text-default-text font-bold text-center\">\r\n                        {item.quantity}\r\n                      </span>\r\n\r\n                      <button\r\n                        className=\"w-[48px] h-[48px] text-white font-bold bg-light-01 flex justify-center items-center hover:bg-white hover:text-dark-01 ease-linear transition-all\"\r\n                        onClick={addOne}\r\n                        id={item._id}\r\n                      >\r\n                        +\r\n                      </button>\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n\r\n              {cart.length > 0 && (\r\n                <p\r\n                  className={twMerge(\r\n                    \"text-[2rem] leading-[1.4]\",\r\n                    \"tablet:text-[2.2rem]\"\r\n                  )}\r\n                >\r\n                  Total:{\" \"}\r\n                  {cart.reduce((acc, item) => {\r\n                    acc += item.quantity * item.price;\r\n\r\n                    return acc;\r\n                  }, 0)}{\" \"}\r\n                  {currency}\r\n                </p>\r\n              )}\r\n            </div>\r\n\r\n            <Form />\r\n          </div>\r\n        ) : (\r\n          <div className=\"flex justify-center items-center h-[300px]\">\r\n            <p\r\n              className={twMerge(\r\n                \"text-[2rem] leading-[1.4]\",\r\n                \"tablet:text-[2.2rem]\"\r\n              )}\r\n            >\r\n              No items in your cart\r\n            </p>\r\n          </div>\r\n        )}\r\n      </Container>\r\n    </Section>\r\n  );\r\n};\r\n","import { createLazyFileRoute } from \"@tanstack/react-router\";\nimport { CartInfo } from \"../sections/cart/cart-info/cart-info\";\n\nexport const Route = createLazyFileRoute(\"/cart\")({\n  component: Cart,\n});\n\nfunction Cart() {\n  return (\n    <main>\n      <CartInfo />\n    </main>\n  );\n}\n","import { ReactNode } from \"react\";\r\nimport { twMerge } from \"tailwind-merge\";\r\n\r\nexport interface SectionProps {\r\n  className?: string;\r\n  children: ReactNode;\r\n}\r\n\r\nexport const Section = (props: SectionProps) => (\r\n  <section\r\n    className={twMerge(\r\n      \"tablet:py-[100px] py-[36px] flex flex-col\",\r\n      props.className\r\n    )}\r\n  >\r\n    {props.children}\r\n  </section>\r\n);\r\n"],"names":["defaultErrorsState","name","phone","surname","useFormController","errors","setErrors","useState","navigate","useNavigate","orderSchema","z","object","string","min","message","regex","required","dispatch","useDispatch","onSubmit","e","preventDefault","form","target","nameInput","elements","namedItem","surnameInput","phoneInput","value","isFormValid","data","parse","_errors","issues","forEach","error","key","path","validate","formData","console","log","localStorage","removeItem","clearCart","to","Form","_jsxs","children","_jsx","className","twMerge","id","htmlFor","placeholder","type","CartInfo","cart","useSelector","state","currency","products","addOne","newQuantityCart","map","item","_id","quantity","setItem","JSON","stringify","changeQuantity","minusOne","filter","includes","Section","Container","length","title","price","onClick","reduce","acc","Route","createLazyFileRoute","component","props"],"sourceRoot":""}