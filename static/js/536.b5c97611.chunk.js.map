{"version":3,"file":"static/js/536.b5c97611.chunk.js","mappings":"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","sources":["sections/cart/cart-info/components/form/form.controller.ts","sections/cart/cart-info/components/form/form.tsx","sections/cart/cart-info/cart-info.tsx","routes/cart.lazy.tsx","shared/components/common/section/section.tsx"],"sourcesContent":["import { FormEventHandler, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { z, ZodError } from 'zod';\nimport { clearCart } from '../../../../../redux/cart-slice/cart-slice';\nimport { useNavigate } from '@tanstack/react-router';\nimport { ROUTER_BOOK } from '../../../../../constants/router-book';\n\nconst defaultErrorsState = {\n  name: '',\n  phone: '',\n  surname: '',\n};\n\nexport const useFormController = () => {\n  const [errors, setErrors] = useState(defaultErrorsState);\n  const navigate = useNavigate();\n\n  const orderSchema = z\n    .object({\n      name: z.string().min(1, { message: 'Name is required' }),\n      surname: z.string().min(1, { message: 'Surname is required' }),\n      phone: z\n        .string()\n        .regex(/^\\+?\\d[\\d\\s-]{8,14}$/, { message: 'Invalid phone number' }),\n    })\n    .required();\n\n  type OrderSchema = z.infer<typeof orderSchema>;\n\n  const dispatch = useDispatch();\n\n  const validate = (data: OrderSchema) => {\n    try {\n      orderSchema.parse(data);\n\n      return true;\n    } catch (e) {\n      const err = e as unknown as ZodError;\n\n      const _errors = {\n        name: '',\n        surname: '',\n        phone: '',\n      };\n\n      err.issues.forEach(error => {\n        const key = error.path[0] as keyof typeof _errors;\n        const value = error.message;\n\n        _errors[key] = value;\n      });\n\n      setErrors(_errors);\n\n      return false;\n    }\n  };\n\n  const onSubmit: FormEventHandler<HTMLFormElement> = e => {\n    e.preventDefault();\n\n    setErrors(defaultErrorsState);\n\n    const form = e.target as HTMLFormElement;\n\n    const nameInput = form.elements.namedItem('name') as HTMLInputElement;\n    const surnameInput = form.elements.namedItem('surname') as HTMLInputElement;\n    const phoneInput = form.elements.namedItem('phone') as HTMLInputElement;\n\n    const name = nameInput.value.trim();\n    const surname = surnameInput.value.trim();\n    const phone = phoneInput.value.trim();\n\n    const isFormValid = validate({ name, surname, phone });\n\n    if (!isFormValid) return;\n\n    const formData = {\n      name,\n      surname,\n      phone,\n    };\n\n    console.log(formData);\n\n    localStorage.removeItem('cart');\n    dispatch(clearCart());\n\n    navigate({ to: ROUTER_BOOK.thanks });\n  };\n\n  return {\n    onSubmit,\n    errors,\n  };\n};\n","import { twMerge } from \"tailwind-merge\";\nimport { useFormController } from \"./form.controller\";\n\nexport const Form = () => {\n  const { onSubmit, errors } = useFormController();\n\n  return (\n    <div>\n      <p\n        className={twMerge(\n          \"mb-[16px] font-bold\",\n          \"text-[2rem] leading-[1.4]\",\n          \"tablet:text-[2.2rem]\"\n        )}\n      >\n        Create your order\n      </p>\n\n      <form\n        className=\"flex flex-col gap-[16px]\"\n        id=\"cart-form\"\n        onSubmit={onSubmit}\n      >\n        <div className=\"flex flex-col gap-[8px]\">\n          <label htmlFor=\"name\">Name</label>\n\n          <input\n            placeholder=\"Name\"\n            type=\"text\"\n            id=\"name\"\n            className=\"border-[1px] border-light-01 px-[8px] py-[4px]\"\n          />\n\n          {errors.name && <p>{errors.name}</p>}\n        </div>\n\n        <div className=\"flex flex-col gap-[8px]\">\n          <label htmlFor=\"surname\">Surname</label>\n\n          <input\n            placeholder=\"Surname\"\n            type=\"text\"\n            id=\"surname\"\n            className=\"border-[1px] border-light-01 px-[8px] py-[4px]\"\n          />\n\n          {errors.surname && <p>{errors.surname}</p>}\n        </div>\n\n        <div className=\"flex flex-col gap-[8px]\">\n          <label htmlFor=\"phone\">Phone</label>\n\n          <input\n            placeholder=\"Phone\"\n            type=\"number\"\n            id=\"phone\"\n            className=\"border-[1px] border-light-01 px-[8px] py-[4px]\"\n          />\n\n          {errors.phone && <p>{errors.phone}</p>}\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"w-full bg-dark-01 px-[8px] py-[12px] text-white hover:shadow-left-shadow-black-button ease-linear transition-all\"\n        >\n          Create order\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { twMerge } from \"tailwind-merge\";\nimport { MouseEventHandler } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { Container } from \"../../../shared/components/common/container/container\";\nimport { Section } from \"../../../shared/components/common/section/section\";\n\nimport { RootState } from \"../../../redux/store\";\nimport { changeQuantity } from \"../../../redux/cart-slice/cart-slice\";\nimport { Form } from \"./components/form/form\";\n\nexport const CartInfo = () => {\n  const cart = useSelector((state: RootState) => state.cart.cart);\n  const currency = useSelector((state: RootState) => state.products.currency);\n\n  const dispatch = useDispatch();\n\n  const addOne: MouseEventHandler<HTMLButtonElement> = (e) => {\n    const { id } = e.target as HTMLButtonElement;\n\n    const newQuantityCart = cart.map((item) => {\n      if (item._id !== id) return item;\n\n      return {\n        ...item,\n        quantity: item.quantity + 1,\n      };\n    });\n\n    localStorage.setItem(\"cart\", JSON.stringify(newQuantityCart));\n\n    dispatch(changeQuantity({ type: \"plus\", id }));\n  };\n\n  const minusOne: MouseEventHandler<HTMLButtonElement> = (e) => {\n    const { id } = e.target as HTMLButtonElement;\n\n    dispatch(changeQuantity({ type: \"minus\", id }));\n\n    const newQuantityCart = cart\n      .map((item) => {\n        if (item._id !== id) return item;\n\n        return {\n          ...item,\n          quantity: item.quantity - 1,\n        };\n      })\n      .filter((item) => item?.quantity > 0);\n\n    if (!cart.map((item) => item._id).includes(id)) {\n      localStorage.setItem(\n        \"cart\",\n        JSON.stringify(cart.filter((item) => item._id !== id))\n      );\n    }\n\n    localStorage.setItem(\"cart\", JSON.stringify(newQuantityCart));\n  };\n\n  return (\n    <Section>\n      <Container>\n        <h2\n          className={twMerge(\n            \"mb-[20px] font-bold\",\n            \"text-[3.4rem] leading-[1.2]\",\n            \"tablet:text-[4.6rem]\"\n          )}\n        >\n          Cart\n        </h2>\n\n        {cart.length > 0 ? (\n          <div className=\"flex gap-[28px] flex-col tablet-vertical:flex-row\">\n            <div className=\"flex flex-col gap-[20px] grow\">\n              <ul className=\"flex flex-col gap-[20px]\">\n                {cart.map((item) => (\n                  <li\n                    key={item._id}\n                    className=\"bg-light-04 px-[16px] py-[20px] flex justify-between\"\n                  >\n                    <div>\n                      <h3>{item.title}</h3>\n                      <span>\n                        {item.price} {item.currency}\n                      </span>\n                    </div>\n\n                    <div className=\"flex gap-[12px] items-center\">\n                      <button\n                        className=\"w-[48px] h-[48px] text-white font-bold bg-light-01 flex justify-center items-center hover:bg-white hover:text-dark-01 ease-linear transition-all\"\n                        onClick={minusOne}\n                        id={item._id}\n                      >\n                        -\n                      </button>\n\n                      <span className=\"text-default-text font-bold text-center\">\n                        {item.quantity}\n                      </span>\n\n                      <button\n                        className=\"w-[48px] h-[48px] text-white font-bold bg-light-01 flex justify-center items-center hover:bg-white hover:text-dark-01 ease-linear transition-all\"\n                        onClick={addOne}\n                        id={item._id}\n                      >\n                        +\n                      </button>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n\n              {cart.length > 0 && (\n                <p\n                  className={twMerge(\n                    \"text-[2rem] leading-[1.4]\",\n                    \"tablet:text-[2.2rem]\"\n                  )}\n                >\n                  Total:{\" \"}\n                  {cart.reduce((acc, item) => {\n                    acc += item.quantity * item.price;\n\n                    return acc;\n                  }, 0)}{\" \"}\n                  {currency}\n                </p>\n              )}\n            </div>\n\n            <Form />\n          </div>\n        ) : (\n          <div className=\"flex justify-center items-center h-[300px]\">\n            <p\n              className={twMerge(\n                \"text-[2rem] leading-[1.4]\",\n                \"tablet:text-[2.2rem]\"\n              )}\n            >\n              No items in your cart\n            </p>\n          </div>\n        )}\n      </Container>\n    </Section>\n  );\n};\n","import { createLazyFileRoute } from \"@tanstack/react-router\";\nimport { CartInfo } from \"../sections/cart/cart-info/cart-info\";\n\nexport const Route = createLazyFileRoute(\"/cart\")({\n  component: Cart,\n});\n\nfunction Cart() {\n  return (\n    <main>\n      <CartInfo />\n    </main>\n  );\n}\n","import { ReactNode } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport interface SectionProps {\n  className?: string;\n  children: ReactNode;\n}\n\nexport const Section = (props: SectionProps) => (\n  <section\n    className={twMerge(\n      \"tablet:py-[100px] py-[36px] flex flex-col\",\n      props.className\n    )}\n  >\n    {props.children}\n  </section>\n);\n"],"names":["defaultErrorsState","name","phone","surname","useFormController","errors","setErrors","useState","navigate","useNavigate","orderSchema","z","object","string","min","message","regex","required","dispatch","useDispatch","onSubmit","e","preventDefault","form","target","nameInput","elements","namedItem","surnameInput","phoneInput","value","trim","isFormValid","data","parse","_errors","issues","forEach","error","key","path","validate","formData","console","log","localStorage","removeItem","clearCart","to","ROUTER_BOOK","thanks","Form","_jsxs","children","_jsx","className","twMerge","id","htmlFor","placeholder","type","CartInfo","cart","useSelector","state","currency","products","addOne","newQuantityCart","map","item","_id","quantity","setItem","JSON","stringify","changeQuantity","minusOne","filter","includes","Section","Container","length","title","price","onClick","reduce","acc","Route","createLazyFileRoute","component","props"],"sourceRoot":""}